# -*- coding: utf-8 -*-
"""Random_Password_Generator_App.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FG_HjOwzTfA6bv5NGnVQp4730XKw7LsW
"""

import streamlit as st
import random
import string

st.set_page_config(page_title="Password Generator", page_icon="üîê")

# Title
st.title("üîê Random Password Generator")

# User options
length = st.slider("Password length", 6, 32, 12)

use_uppercase = st.checkbox("Include UPPERCASE letters", value=True)
use_lowercase = st.checkbox("Include lowercase letters", value=True)
use_digits = st.checkbox("Include numbers (123)", value=True)
use_special = st.checkbox("Include special characters (!@#$)", value=True)
exclude_similar = st.checkbox("Exclude similar characters (e.g. 1, l, O, 0)", value=False)

# Similar characters to exclude
similar_chars = "il1Lo0O"

# Function to generate password
def generate_password():
    char_pool = ''
    if use_uppercase:
        char_pool += string.ascii_uppercase
    if use_lowercase:
        char_pool += string.ascii_lowercase
    if use_digits:
        char_pool += string.digits
    if use_special:
        char_pool += string.punctuation

    if exclude_similar:
        char_pool = ''.join(c for c in char_pool if c not in similar_chars)

    if not char_pool:
        return None

    password = ''.join(random.choice(char_pool) for _ in range(length))
    return password

# Strength checker
def check_strength(length, sets_used):
    score = length + sets_used * 2
    if score < 12:
        return "üü† Weak"
    elif score < 20:
        return "üü° Medium"
    else:
        return "üü¢ Strong"

# Generate button
if st.button("Generate Password"):
    password = generate_password()
    if password:
        sets_used = sum([use_uppercase, use_lowercase, use_digits, use_special])
        strength = check_strength(length, sets_used)

        st.markdown("### ‚úÖ Your new password:")
        st.code(password, language="")  # This is copy-friendly
        st.markdown(f"**Strength:** {strength}")
    else:
        st.warning("Please select at least one character set.")